<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Quotes Web App</title>

    <style>
      .quoteContainer {
        display: flex;
        width: 40%;
        margin-bottom: 24px;
        align-items: center;
      }
      .card {
        background-color: aliceblue;
        padding: 8px 16px;
        border-radius: 8px;
      }

      .message {
        background-color: lightgreen;
        text-align: center;
        width: 100%;
        display: none;
      }

      .show {
        display: block;
      }

      [contenteditable="true"] {
        background-color: #ccc;
        border-radius: 8px;
        padding: 4px 8px;
      }
    </style>
  </head>
  <body>
    <div class="message"></div>
    <h1>Quotes</h1>
    <form action="/search" method="get">
      <input type="text" name="searchStr" id="searchStr" />
      <button type="submit">Search</button>
    </form>
    <% quotes.forEach(function(quote) { %>
    <div class="quoteContainer">
      <div class="card">
        <p class="quote-author">Author: <%= quote.author %></p>
        <p class="quote-quote">Quote:<%= quote.quote %></p>
        <p>Date: <%= quote.date %></p>
        <button class="edit-button" data-id="<%= quote.id %>">Edit</button>
        <button onclick="handleDelete(<%= quote.id %>)">Delete</button>
    </div>
    </div>
    <% }); %>
    <h2>Create Quote</h2>
    <form action="/quotes" method="post">
      <label for="quote">Quote</label>
      <input type="text" name="quote" id="quote" />
      <label for="author">Author</label>
      <input type="text" name="author" id="author" />
      <label for="date">Date</label>
      <input type="date" name="date" id="date" />
      <button type="submit">Create</button>
    </form>

    <script>
      async function handleDelete(id) {
        console.log("HandleDelete was called with id", id);
        const response = await fetch(`/quotes/${id}`, { method: "delete" });

        if (response.redirected) {
          window.location.href = response.url; // '/'
        }
      }

      async function handleEdit(evt) {
        const id = Number(evt.target.dataset.id); // data-id -> dataset.id
        const container = evt.target.parentElement;
        const authorEl = container.querySelector(".quote-author");
        const quoteEl = container.querySelector(".quote-quote");
        const dateEl = container.querySelector(".quote-date");
        console.log(dateEl);

        // if not editable make them editable
        if (!authorEl.isContentEditable && !quoteEl.isContentEditable) {
          authorEl.contentEditable = true;
          quoteEl.contentEditable = true;

          // clicking the same button should save the changes
          evt.target.innerText = "Save";
        } else {
          // Second time clicked it should save changes

          // reset element to be non editable
          authorEl.contentEditable = false;
          quoteEl.contentEditable = false;
          evt.target.innerText = "Edit";

          // Look at values of authorEl and quoteEl and submit new quote
          const newQuote = {
            author: authorEl.innerText,
            quote: quoteEl.innerText,
            date: dateEl.value,
          };
          const response = await fetch(`/quotes/${id}`, {
            method: "put",
            body: JSON.stringify(newQuote),
            headers: {
              "Content-Type": "application/json",
            },
          });
          
          // Check if there is a redirect to follow the new url
          if (response.redirected) {
            window.location.href = response.url;
          }
        }
      }

      document
        .querySelectorAll(".edit-button")
        .forEach((btn) => (btn.onclick = handleEdit));
    </script>
  </body>
</html>
